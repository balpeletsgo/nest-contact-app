// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid()) @db.VarChar(255)
  email     String    @db.VarChar(255)
  password  String    @db.VarChar(255)
  name      String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Contact   Contact[]

  @@unique([email])
  @@map("users")
}

model Contact {
  id        String   @id @default(uuid()) @db.Uuid
  firstName String   @db.VarChar(255)
  lastName  String?  @db.VarChar(255)
  email     String?  @db.VarChar(255)
  userId    String   @db.VarChar(255)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Phone     Phone[]

  @@index([userId], name: "idx_contacts_user_id")
  @@map("contacts")
}

model Phone {
  id        String   @id @default(uuid()) @db.Uuid
  number    String   @db.VarChar(100)
  contactId String   @db.Uuid
  contact   Contact  @relation(fields: [contactId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([contactId], name: "idx_phones_contact_id")
  @@map("phones")
}
